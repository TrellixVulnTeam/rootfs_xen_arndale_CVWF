#!/usr/bin/perl -w
# bin-pkg-control -- lintian collector script

# Copyright (C) 1998 Christian Schwarz
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

package Lintian::coll::bin_pkg_control;

use strict;
use warnings;
use autodie;

use constant ERROR_FILES => qw(control-index-errors control-errors);

use lib "$ENV{'LINTIAN_ROOT'}/lib";
use Lintian::Command qw(spawn reap);
use Lintian::Util qw(delete_dir fail);

sub collect {
    my ($pkg, $type, $dir) = @_;
    my (@jobs, $job);

    if (-e "$dir/control"){
        delete_dir("$dir/control") or fail 'Cannot remove old control dir';
    }

    for my $file ('control-index.gz', ERROR_FILES) {
        my $path = "$dir/$file";
        unlink($path) if -e $path;
    }

    mkdir("$dir/control", 0777);

    # The following calls use knowledge of the .deb format for speed

    # (replaces dpkg-deb -e)
    # extract control files' tarball
    spawn(
        { fail => 'error', out => "$dir/control.tar" },
        ['ar', 'p', "$dir/deb", 'control.tar.gz'],
        '|', ['gzip', '-dc']);

    $job = { fail => 'error', err => "$dir/control-errors" };
    push @jobs, $job;
    # extract the tarball's contents
    spawn($job, ['tar', 'xf', "$dir/control.tar", '-C', "$dir/control", '&']);

    $job = {
        fail => 'error',
        out  => "$dir/control-index.gz",
        err  => "$dir/control-index-errors"
    };

    push @jobs, $job;
    # create index of control.tar.gz
    spawn(
        $job, ['tar', 'tvf', "$dir/control.tar"],
        '|', ['sort', '-k', '6'],
        '|', ['gzip', '--best', '-c'], '&'
    );

    reap(@jobs);
    undef @jobs;
    # clean up control.tar
    unlink("$dir/control.tar");

    # fix permissions
    spawn({ fail => 'error' }, ['chmod', '-R', 'u+rX,o-w', "$dir/control"]);

    # Remove empty error files...
    for my $file (ERROR_FILES) {
        my $path = "$dir/$file";
        unlink($path) if -z $path;
    }

    return;
}

collect(@ARGV) if $0 =~ m,(?:^|/)bin-pkg-control$,;

1;

# Local Variables:
# indent-tabs-mode: nil
# cperl-indent-level: 4
# End:
# vim: syntax=perl sw=4 sts=4 sr et
